{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4d31b14e-b7b3-423f-a958-440abd24404e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tweepy\n",
    "from twitter_authentication import bearer_token\n",
    "import time\n",
    "import pandas as pd\n",
    "import openpyxl\n",
    "import numpy as np\n",
    "import re\n",
    "from azure.core.credentials import AzureKeyCredential\n",
    "from azure.ai.textanalytics import TextAnalyticsClient\n",
    "client = tweepy.Client(bearer_token, wait_on_rate_limit=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1",
   "metadata": {},
   "outputs": [],
   "source": [
    "credential = AzureKeyCredential(\"\")\n",
    "text_analytics_client = TextAnalyticsClient(endpoint=\"/\", credential=credential)\n",
    "endpoint=\"https://azurestudentssentiment.cognitiveservices.azure.com/\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "06c8827f-888b-4548-8f78-2060d3bd7422",
   "metadata": {},
   "outputs": [],
   "source": [
    "ankarabbld_Tweets = []\n",
    "for response in tweepy.Paginator(client.search_all_tweets, \n",
    "                                 query = 'ankarabld -is:retweet',                                 \n",
    "                                 user_fields = ['username', 'public_metrics', 'description', 'location', 'profile_image_url'],\n",
    "                                 tweet_fields = ['created_at', 'public_metrics', 'text', 'conversation_id'],\n",
    "                                 expansions = ['author_id', 'in_reply_to_user_id'],\n",
    "                                 start_time = '2017-05-01T00:00:00Z',\n",
    "                                 end_time = '2017-05-30T00:00:00Z',\n",
    "                              max_results=500):\n",
    "    time.sleep(1)\n",
    "    ankarabbld_Tweets.append(response)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7e329a6f-4e2d-42c2-9432-403f8308a5ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "text_analytics_client = TextAnalyticsClient(endpoint, credential)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f7036f12-5370-46fc-b049-b1ccd0d5023c",
   "metadata": {},
   "outputs": [],
   "source": [
    "result = []\n",
    "user_dict = {}\n",
    "for response in ankarabbld_Tweets:\n",
    "    for user in response.includes['users']:\n",
    "        user_dict[user.id] = {'username': user.username, \n",
    "                              'followers': user.public_metrics['followers_count'],\n",
    "                              'status_count': user.public_metrics['tweet_count'],\n",
    "                              'description': user.description,\n",
    "                              'name': user.name,\n",
    "                              'id' : user.id,\n",
    "                             'profile_image_url' : user.profile_image_url,\n",
    "                              'location': user.location\n",
    "                             }\n",
    "    for tweet in response.data:\n",
    "        author_info = user_dict[tweet.author_id]\n",
    "        response = text_analytics_client.analyze_sentiment([tweet.text] , language=\"tr\")\n",
    "        result1 = [doc for doc in response if not doc.is_error]       \n",
    "        for doc in result1:          \n",
    "            result.append({'tweet_created_at': str(tweet.created_at),\n",
    "                       'favorite_count': tweet.public_metrics['like_count'],\n",
    "                        'id_str':str(tweet.id),\n",
    "                       'retweet_count': tweet.public_metrics['retweet_count'],\n",
    "                       'text': tweet.text,\n",
    "                       'description': author_info['description'],\n",
    "                       'followers_count': author_info['followers'],\n",
    "                       'user_id': str(tweet.author_id),\n",
    "                       'location': author_info['location'],\n",
    "                       'name': author_info['username'],\n",
    "                       'profile_image_url': author_info['profile_image_url'], \n",
    "                       'status_count': author_info['status_count'],\n",
    "                       'screen_name': author_info['name'],\n",
    "                       'tweet_conversation_id': str(tweet.conversation_id),                       \n",
    "                       'in_repy_to_user_id':str(tweet.in_reply_to_user_id),                                \n",
    "                       'reply_count': tweet.public_metrics['reply_count'],\n",
    "                       'quote_count': tweet.public_metrics['quote_count'],                                            \n",
    "                       'SentimentPozitif' : float(doc.confidence_scores.positive),\n",
    "                       'SentimentNotr' : float(doc.confidence_scores.neutral),\n",
    "                       'SentimentNegatif' : float(doc.confidence_scores.negative),\n",
    "                       'Tweet_Genel_Durum' : doc.sentiment                       \n",
    "                                             })\n",
    "        \n",
    "    \n",
    "df = pd.DataFrame(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a619bf7a-66c6-4757-8f00-78f22b3ec352",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_excel('C:/ankarabbldmodel3/2017mayis.xlsx', index='False')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "503d2745-7ee2-4942-83e1-41d85a421634",
   "metadata": {},
   "outputs": [],
   "source": [
    "js = df.to_json(\"C:/ankarabbldmodel3/2017mayis.json\", orient = 'index')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c2e31871-9dca-4603-9b3b-0d8355e7280d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cccb9204-fceb-4fdb-bcc7-ee17a7aaad06",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "62d1057e-8545-40b6-9919-c7fef32c6ddd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
